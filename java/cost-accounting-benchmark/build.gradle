plugins {
    id 'java'

    id 'java-library-distribution'

    id 'com.diffplug.eclipse.apt' version '3.24.0'
    id 'org.seasar.doma.compile' version '1.1.0'
    id 'com.github.spotbugs' version '4.7.1'
}

if (hasProperty('mavenLocal')) {
    repositories {
        mavenLocal()
    }
} else {
    repositories {
        maven {
            url 'https://maven.pkg.github.com/project-tsurugi/*'
            content {
                includeGroupByRegex 'com\\.tsurugidb.*'
            }
            credentials {
                username findProperty('gpr.user') ?: System.getenv('GPR_USER')
                password findProperty('gpr.key') ?: System.getenv('GPR_KEY')
            }
        }
    }
}

repositories {
    mavenCentral {
        content {
            excludeGroupByRegex 'com\\.tsurugidb.*'
        }
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 8, 'hours'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

spotbugs {
  excludeFilter = file("spotbugs-exclude-filter.xml")
}

spotbugsMain {
    reports {
        html {
            enabled = !project.hasProperty("ci")
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
        xml {
            enabled = project.hasProperty("ci")
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.xml")
        }
    }
}

spotbugsTest.enabled = false

dependencies {
  // https://mvnrepository.com/artifact/org.postgresql/postgresql
  implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.16'
  // https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8
  runtimeOnly group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.1.0.0'
  implementation group: 'com.oracle.database.jdbc', name: 'ucp', version: '21.1.0.0'
  runtimeOnly group: 'com.oracle.database.nls', name: 'orai18n', version: '21.1.0.0'

  api 'com.tsurugidb.iceaxe:iceaxe-core:0.0.1-SNAPSHOT'

  // https://mvnrepository.com/artifact/org.apache.poi/poi
  implementation group: 'org.apache.poi', name: 'poi', version: '4.1.2'
  // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
  implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

  // https://mvnrepository.com/artifact/org.seasar.doma/doma
  implementation "org.seasar.doma:doma-core:2.41.0"
  annotationProcessor "org.seasar.doma:doma-processor:2.41.0"

  // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
  implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

tasks.named('test') {
    useJUnitPlatform()

    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

task showIceaxeManifest {
    doLast {
        def tsubakuroJar = configurations["compileClasspath"].filter {
            it.name.startsWith("iceaxe-core")
        }
        def version = resources.text.fromArchiveEntry(tsubakuroJar, "META-INF/MANIFEST.MF")
        print(version.asString())
    }
}

eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { it.path == '.apt_generated' }
            }
            withXml { provider ->
                def node = provider.asNode()
                // specify output path for .apt_generated
                node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
            }
        }
    }
}
